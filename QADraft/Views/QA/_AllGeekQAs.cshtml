@model List<QADraft.Models.GeekQA>

@{
    ViewData["Title"] = "All QA's";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .action-btn {
        color: #fff;
        background-color: #861F41;
        border-color: #861F41;
    }

        .action-btn:hover {
            color: #fff;
            background-color: #b31f4f;
            border-color: #E6A65D;
        }

    .confirmation-dialog {
        display: none;
        position: fixed;
        z-index: 9999;
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
        background-color: #d9f0ff;
        border: 1px solid #ccc;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        padding: 20px;
        max-width: 300px;
    }

    .confirmation-content {
        text-align: center;
    }

    .confirmation-buttons {
        margin-top: 20px;
    }

    .confirmation-buttons button {
        padding: 10px 20px;
        margin: 0 10px;
        cursor: pointer;
    }

    #descriptionButton {
        padding: 5px 8px;
    }

    #description-icon {
        width: 22px;
        height: 22px;
    }

    /* Underlines the current page's link in the nav bar */
    #qa-menu-link {
        padding-bottom: 1px;
        border-bottom: 1px solid #fff;
    }


</style>

<partial name="_ReportsMenu" />
<h2>All QAs</h2>

<!-- Filters for data -->
<div>
    <input type="text" id="startDate" placeholder="Start Date">
    <input type="text" id="endDate" placeholder="End Date">
    <select id="categoryFilter">
        <option value="">All Categories</option>
        <!-- Add your categories here -->
        <option value="Category1">Category1</option>
        <option value="Category2">Category2</option>
    </select>
    <button onclick="filterData()">Filter</button>
</div>

<!-- Chart container -->
<div id="chart"></div>

<!-- Table used to output QAs -->
<table class="table table-striped" id="table">
    <thead>
        <tr>
            <th onclick="sortTable(0)">Committed By<span class="arrow"></th>
            <th onclick="sortTable(1)">Found By<span class="arrow"></th>
            <th onclick="sortTable(2)">Category<span class="arrow"></th>
            <th onclick="sortTable(3)">Nature<span class="arrow"></th>
            <th onclick="sortTable(4)">Severity<span class="arrow"></th>
            <th onclick="sortTable(5)">Date<span class="arrow"></th>
            <th class="noSort">Actions</th> 
        </tr>
    </thead>
    <tbody>
        <!-- Populate the table with all QAs form the database -->
        @foreach (var qa in Model.OrderByDescending(q => q.ErrorDate))
        {
            <tr>
                <td>@qa.CommittedBy?.FirstName @qa.CommittedBy?.LastName</td>
                <td>@qa.FoundBy?.FirstName @qa.FoundBy?.LastName</td>
                <td>@qa.CategoryOfError</td>
                <td>@qa.NatureOfError</td>
                <td>@qa.Severity</td>
                <td>@qa.ErrorDate.ToString("yyyy-MM-dd")</td>
                <td>
                    <form method="post" asp-controller="QA" asp-action="ManageQA">
                        <input type="hidden" name="qaId" value="@qa.Id" />
                        <div class="form-group">
                            <button id="descriptionButton" type="button" class="btn buttons" onclick="showDescription(event)"> <img id="description-icon" src="~/images/descriptionIconWhite.png"> </button>

                            <input id="updateButton" type="submit" name="action" value="Update" class="btn buttons" />
                            <input id="deleteButton" type="submit" name="action" value="Delete QA" class="btn buttons" hidden/>
                            <button id="deleteButton" onclick="openConfirmationDialog(event)" class="btn buttons">Delete</button>
                        </div>
                        <p id="qaDescription" hidden>@qa.Description</p>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Configure delete QA confirmation popup -->
<div id="confirmationDialog" class="confirmation-dialog">
    <div class="confirmation-content">
        <p>Are you sure you want to delete this QA?</p>
        <div class="confirmation-buttons">
            <button class="btn btn-danger" onclick="confirmDelete()">Yes</button>
            <button class="btn btn-primary" onclick="closeConfirmationDialog()">No</button>
        </div>
    </div>
</div>

<!-- Description Dialog popup -->
<div id="descriptionDialog" class="confirmation-dialog">
    <div class="confirmation-content">
        <h>QA Description</h>
        <p id="description-text"></p>
        <div class="confirmation-buttons">
            <button class="btn btn-primary" onclick="closeDescription()">Close</button>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://d3js.org/d3.v7.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function() {
            flatpickr("#startDate", { dateFormat: "Y-m-d" });
            flatpickr("#endDate", { dateFormat: "Y-m-d" });
            renderChart(); // Initial load
        });

        async function fetchData(startDate, endDate, category) {
            const url = new URL('/api/Chart', window.location.origin);
            const params = { startDate, endDate, category };
            Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));
            const response = await fetch(url);
            const data = await response.json();
            return data;
        }

        async function renderChart(startDate, endDate, category) {
            const data = await fetchData(startDate, endDate, category);

            const margin = { top: 20, right: 30, bottom: 40, left: 40 };
            const width = 800 - margin.left - margin.right;
            const height = 400 - margin.top - margin.bottom;

            d3.select("#chart").select("svg").remove();

            const svg = d3.select("#chart")
                .append("svg")
                .attr("width", width + margin.left + margin.right)
                .attr("height", height + margin.top + margin.bottom)
                .append("g")
                .attr("transform", `translate(${margin.left},${margin.top})`);

            const x = d3.scaleBand()
                .domain(data.map(d => d.CommittedBy.Username))
                .range([0, width])
                .padding(0.2);

            svg.append("g")
                .attr("transform", `translate(0,${height})`)
                .call(d3.axisBottom(x))
                .selectAll("text")
                .attr("transform", "translate(-10,0)rotate(-45)")
                .style("text-anchor", "end");

            const y = d3.scaleLinear()
                .domain([0, d3.max(data, d => d.Severity)])
                .range([height, 0]);

            svg.append("g")
                .call(d3.axisLeft(y));

            svg.selectAll(".bar")
                .data(data)
                .enter()
                .append("rect")
                .attr("x", d => x(d.CommittedBy.Username))
                .attr("y", d => y(d.Severity))
                .attr("width", x.bandwidth())
                .attr("height", d => height - y(d.Severity))
                .attr("class", "bar");
        }

        function filterData() {
            const startDate = document.getElementById('startDate').value;
            const endDate = document.getElementById('endDate').value;
            const category = document.getElementById('categoryFilter').value;
            renderChart(startDate, endDate, category);
        }

        function showDescription() {
            document.getElementById('descriptionDialog').style.display = 'block';
        }

        function closeDescription() {
            document.getElementById('descriptionDialog').style.display = 'none';
        }

        function openConfirmationDialog(event) {
            event.preventDefault(); // Prevent default behavior

            var parentForm = event.target.closest('form');
            window.currentForm = parentForm;
            document.getElementById('confirmationDialog').style.display = 'block';
        }

        function closeConfirmationDialog() {
            document.getElementById('confirmationDialog').style.display = 'none';
        }

        function confirmDelete() {
            window.currentForm.querySelector('input[type="submit"][name="action"][value="Delete QA"]').click();
            closeConfirmationDialog();
            return false;
        }

    </script>
}

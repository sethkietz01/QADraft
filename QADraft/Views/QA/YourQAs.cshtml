@* Define the model being used in the page. Uses a list of GeekQAs *@
@model List<QADraft.Models.GeekQA>

@{
    ViewData["Title"] = "Filter QAs";
    Layout = ViewBag.Layout;
    string menu = ViewBag.menu;
}

<style>
    .filter-options-button {
        color: #fff;
        background-color: #861F41;
        border-color: #861F41;
    }
        
        .filter-options-button:hover {
            color: #fff;
            background-color: #b31f4f;
            border-color: #E6A65D;
        }

    #table
    {
        margin-bottom: 55px;
    }

    .confirmation-dialog {
        display: none;
        position: fixed;
        z-index: 9999;
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
        background-color: #d9f0ff;
        border: 1px solid #ccc;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        padding: 20px;
        max-width: 300px;
    }

    .confirmation-content {
        text-align: center;
    }

    .confirmation-buttons {
        margin-top: 20px;
    }

        .confirmation-buttons button {
            padding: 10px 20px;
            margin: 0 10px;
            cursor: pointer;
        }

    .hidden-date {
        font-size: 0;
        padding: 16px;
    }

    .visible-date {
        font-size: 16px;
    }

    .button-group
    {
        margin-top: 10px; 
    }
</style>

<!-- Load the partial view for the navigaton menu -->
@Html.Partial(@menu)
<h2>Your QAs</h2>

<!-- Place the filter options within a div -->
<div class="filter-section">
    <!-- Create the form element and assign the controller and action -->
    <form id="filterForm" method="get" asp-controller="QA" asp-action="YourQAs">
        <!-- Create div to contain the date selection elements -->
        <div class="form-group">
            <!-- Checkbox that toggles the visibility of the date selection elements -->
            <input type="checkbox" id="dateFilter" name="dateFilter" onchange="toggleDatePicker(this)">
            <label for="dateFilter">Sort by Error Date</label>
            <!-- Container for the date picking elements -->
            <div id="datePickers" style="display: none;">
                <label for="startDate">Start Date:</label>
                <input type="text" id="startDate" name="startDate" class="datepicker form-control hidden-date" onchange="changeStartDate()">
                <label for="endDate">End Date:</label>
                <input type="text" id="endDate" name="endDate" class="datepicker form-control hidden-date" onchange="changeEndDate()">
            </div>
        </div>

        <!-- Create div to contain the Category elements -->
        <div class="form-group">
            <!-- Label for Category -->
            <label for="category">Category:</label>
            <!-- Create the dropdown selection for Category-->
            <select id="category" name="category" class="form-control">
                <option value="">Select Category</option>
                <!-- Populate the dropdown with categories list passed through the ViewBag -->
                @foreach (var category in ViewBag.Categories)
                {
                    @* For each category, add it as a selection option *@
                    <option value="@category.Value">@category.Text</option>
                }
            </select>
        </div>
        <!-- Create div to contain submission buttons -->
        <div class="button-group">
            <button type="submit" class="buttons">Apply Filters</button>
            <!-- Button click calls js function resetFilters() -->
            <button type="button" class="buttons" onclick="resetFilters()">Reset Filters</button>
        </div>
    </form>
</div>

<!-- Place the QA table under the filter options-->
<table id="table" class="table-qa">
    <!-- Create the table headers-->
    <thead>
        <tr>
            <!-- sortTable(x) calls the javascript function from _ReportsMenu to sort 
            by the specified column where x is the column index. The class "arrow" is 
            used by the function to edit the column header -->
            <th onclick="sortTable(0)">Category<span class="arrow"></th>
            <th onclick="sortTable(1)">Nature<span class="arrow"></th>
            <th onclick="sortTable(2)">Severity<span class="arrow"></th>
            <th onclick="sortTable(3)">Commited On<span class="arrow"></th>
            <th onclick="sortTable(4)">Found On<span class="arrow"></th>
        </tr>
    </thead>
    <!-- Create the table body -->
    <tbody>
        <!-- Verify that the Model exists and is not null -->
        @if (Model != null)
        {
            @* If it exists, then populate the table *@
            @foreach (var qa in Model.OrderByDescending(q => q.ErrorDate))
            {
                @* Add each QA in the list of GeekQAs in its own table row *@
                <tr>
                    @* Insert the data from the model *@
                    <td>@qa.CategoryOfError</td>
                    <td>@qa.NatureOfError</td>
                    <td class="severity-cell" data-severity="@qa.Severity"><span class="test-span">@qa.Severity</span></td>
                    <td>@qa.ErrorDate.ToString("yyyy-MM-dd")</td>
                    <td>@qa.FoundOn.ToString("yyyy-MM-dd")</td>
                    
                </tr>
            }
        }
    </tbody>
</table>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css" />
    <script>
        function toggleDatePicker(checkbox) {
            console.log("Toggle Date Picker: ", checkbox.checked); // Debug output
            var datePickers = document.getElementById("datePickers");
            datePickers.style.display = checkbox.checked ? "block" : "none";
        }

        function resetFilters() {
            document.getElementById("filterForm").reset();

            // Explicitly reset individual form fields
            document.getElementById("committedBy").selectedIndex = 0;
            document.getElementById("loggedBy").selectedIndex = 0;
            document.getElementById("category").selectedIndex = 0;

            // Uncheck and hide date pickers
            document.getElementById("dateFilter").checked = false;
            toggleDatePicker({ checked: false });

            // Reset date picker values
            $('#startDate').datepicker('setDate', null);
            $('#endDate').datepicker('setDate', null);
        }

        $(document).ready(function () {
            console.log("Document Loaded"); // Debug output
            // Initialize date pickers
            $('#startDate').datepicker({
                dateFormat: 'yy-mm-dd'
            });
            $('#endDate').datepicker({
                dateFormat: 'yy-mm-dd'
            });
        });

        function changeStartDate() {
            console.log("changeStartDate");

            var startDate = document.getElementById("startDate");

            startDate.classList.remove("hidden-date");
            startDate.classList.add("visible-date");
        }

        function changeEndDate() {
            console.log("changeEndDate");

            var startDate = document.getElementById("startDate");
            var endDate = document.getElementById("endDate");

            var startDateFormat = new Date(startDate.value);
            var endDateFormat = new Date(endDate.value);


            if (endDateFormat < startDateFormat)
            {
                endDate.value = startDate.value;
            }

            endDate.classList.remove("hidden-date");
            endDate.classList.add("visible-date");
        }
    </script>
}
<!--
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
-->

